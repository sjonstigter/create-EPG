---
###########################################################################################################
# Call Workflow
###########################################################################################################
#
# This script performs the following steps:
#
# Requirements:
#
###########################################################################################################
- name: Add VLAN and subnet to SCVMM Logical Network (without IP pool)
  hosts: windows
  gather_facts: no
  vars:
    scvmm_server: "192.168.7.202"
    logical_network_name: "LogicalNetwork_SHG-HyperV-data"
    network_site_name: "LogicalNetwork_SHG-HyperV-data"
    vlan_id: 2004
    subnet_cidr: "10.10.150.0/24"
    hostgroup_name: "Datacenter"
    vm_network_name: "[tn_test][anp_test][epg_test]"
    vm_subnet_name: "[tn_test][anp_test][epg_test]_0"
 
  tasks:
    - name: Add VLAN and subnet (no IP pool)
      ansible.windows.win_powershell:
        script: |
          # Import module only if not loaded
          if (-not (Get-Module -Name VirtualMachineManager)) {
              Import-Module VirtualMachineManager
          }

          # Connect to SCVMM server
          $vmmServer = Get-VMMServer -ComputerName "{{ scvmm_server }}"

          # Get objects
          $logicalNetwork = Get-SCLogicalNetwork -Name "{{ logical_network_name }}"
          if (-not $logicalNetwork) { throw "Logical Network not found" }

          $hostGroup = Get-SCVMHostGroup -Name "{{ hostgroup_name }}"
          if (-not $hostGroup) { throw "Host group not found" }

          # Create subnet-VLAN mapping
          $subnetVlan = New-SCSubnetVLan -Subnet "{{ subnet_cidr }}" -VlanID {{ vlan_id }}

          # Try to get existing definition
          $lnDefinition = Get-SCLogicalNetworkDefinition -LogicalNetwork $logicalNetwork | Where-Object { $_.Name -eq "{{ network_site_name }}" }

          # If not exists, create it
          if (-not $lnDefinition) {
              $lnDefinition = New-SCLogicalNetworkDefinition -Name "{{ network_site_name }}" `
                  -LogicalNetwork $logicalNetwork `
                  -VMHostGroup $hostGroup `
                  -SubnetVLan $subnetVlan
              Write-Host "Created Logical Network Definition"
          } else {
              # Get current list of subnets/VLANs
              $currentSubnets = $lnDefinition.SubnetVLans

              # Append only if not already there
              $exists = $currentSubnets | Where-Object { $_.Subnet -eq "{{ subnet_cidr }}" -and $_.VlanID -eq {{ vlan_id }} }
              if (-not $exists) {
                  $newList = $currentSubnets + $subnetVlan
                  $lnDefinition | Set-SCLogicalNetworkDefinition -SubnetVLan $newList -VMHostGroup $hostGroup
                  Write-Host "Updated Logical Network Definition with new VLAN"
              } else {
                  Write-Host "VLAN/Subnet already exists, skipping update."
              }
          }
