---
- name: Validate Palo Alto EDL URL list entries (fail on invalid)
  hosts: localhost
  gather_facts: false

  vars:
    url_entries:
      - "^paloaltonetworks.com"
      - "*.example.com/*"
      - "example.org/path"
      - "www.site.com/subdir/page"
      - "http://bad.example.com"
      - "example.com?query=1"
      - "example.com#frag"
      - "^.badformat.com"
      - "192.168.1.1"

    pa_url_pattern: >-
      ^(
        \^?                               # optional caret (^)
        (\*\.)?                            # optional wildcard prefix (*.domain)
        [A-Za-z0-9.-]+                     # domain
        (/[A-Za-z0-9._~%!$&'()*+,;=:@/-]*)? # optional path
        (\*)?                               # optional trailing wildcard
      )$

  tasks:

    - name: Initialize lists
      set_fact:
        valid_urls: []
        invalid_urls: []

    - name: Validate each URL
      loop: "{{ url_entries }}"
      loop_control:
        label: "{{ item }}"
      vars:
        is_valid_url: >-
          {{
            (item is match(pa_url_pattern))
            and not (item is search('http|\\?|#|\\s'))
            and not (item | regex_search('^\\d{1,3}(\\.\\d{1,3}){3}$'))
          }}
      block:
        - name: Append to valid_urls
          set_fact:
            valid_urls: "{{ valid_urls + [ item ] }}"
          when: is_valid_url

        - name: Append to invalid_urls
          set_fact:
            invalid_urls: "{{ invalid_urls + [ item ] }}"
          when: not is_valid_url

    - name: Fail if invalid URLs exist
      fail:
        msg: |
          Invalid Palo Alto EDL URLs found:
          {{ invalid_urls | to_nice_yaml }}
      when: invalid_urls | length > 0

    - name: Show valid URLs
      debug:
        msg: "Valid URLs: {{ valid_urls }}"
