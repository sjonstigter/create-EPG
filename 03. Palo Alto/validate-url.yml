- name: Validate Palo Alto EDL URL list entries (fail on invalid)
  hosts: localhost
  gather_facts: false

  vars:
    url_entries:
      - "^paloaltonetworks.com"
      - "*.example.com/*"
      - "example.org/path"
      - "www.site.com/subdir/page"
      - "http://bad.example.com"
      - "example.com?query=1"
      - "example.com#frag"
      - "^.badformat.com"
      - "192.168.1.1"

  tasks:

    - name: Initialize lists
      set_fact:
        valid_urls: []
        invalid_urls: []

    - name: Categorize URLs
      vars:
        starts_with_http: "{{ item.startswith('http://') or item.startswith('https://') }}"
        has_invalid_chars: "{{ '?' in item or '#' in item or ' ' in item }}"
        is_ip: "{{ item | regex_search('^\\d{1,3}(\\.\\d{1,3}){3}$') is not none }}"
        caret_ok: "{{ (item.startswith('^') and not item.startswith('^.')) or not item.startswith('^') }}"
      set_fact:
        valid_urls: "{{ valid_urls + [item] }}"
        invalid_urls: "{{ invalid_urls + [item] }}"
      loop: "{{ url_entries }}"
      loop_control:
        label: "{{ item }}"
      when: not (starts_with_http or has_invalid_chars or is_ip or not caret_ok)

    - name: Collect invalid URLs
      set_fact:
        invalid_urls: "{{ url_entries | difference(valid_urls) }}"

    - name: Fail if invalid URLs exist
      fail:
        msg: |
          Invalid Palo Alto EDL URLs found:
          {{ invalid_urls | to_nice_yaml }}
      when: invalid_urls | length > 0

    - name: Show valid URLs
      debug:
        msg: "Valid URLs: {{ valid_urls }}"
