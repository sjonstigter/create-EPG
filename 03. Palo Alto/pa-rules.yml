---
###########################################################################################################
# Create Palo Alto firewall object
###########################################################################################################
#
# This script performs the following steps:
# - Create Palo Alto network object
#
# Requirements:
# - ansible>=2.15.0
# - paloaltonetworks.panos ansible module (ansible-galaxy collection install paloaltonetworks.panos)
# - Python module pan-python (pip install pan-python) when using panos_module, else use API
#
# Notes:
# - Set use_panos variable to True to use ansible module instead of API
#
###########################################################################################################

- name: CREATE PALO ALTO OBJECT
  hosts: "panorama"
  connection: local
  gather_facts: False

  vars:
    source_object: "bd_myapp1_lb02_prd - 10.221.9.240_28"
    request_url: "www.zero-days.nl/"
    provider:
      ip_address: "{{ inventory_hostname }}"
      username: '{{ lookup("env", "ANSIBLE_NET_USERNAME") }}'
      password: '{{ lookup("env", "ANSIBLE_NET_PASSWORD") }}'

  tasks:
    - name: Get all security rules from the device
      paloaltonetworks.panos.panos_security_rule:
        provider: "{{ provider }}"
        device_group: "ss-external"
        state: 'gathered'
        gathered_filter: '*'
      register: security_rules

#    - name: DEBUG - Display matching rules
#      debug:
#        var: security_rules

    - name: Filter rules with source object "{{ source_object }}"
      set_fact:
        filtered_rules: >-
          {{
            security_rules.gathered | selectattr('source_ip', 'defined') 
                                 | selectattr('source_ip', 'contains', source_object)
                                 | list
          }}

#    - name: DEBUG - Display matching rules
#      debug:
#        var: filtered_rules

    - name: Initialize list of categories
      set_fact:
        url_categories: []

    - name: Append category to list
      set_fact:
        url_categories: "{{ url_categories + [item.category | join(', ')] }}"
      loop: "{{ filtered_rules }}"

    - name: DEBUG - Display all categories
      debug:
        var: url_categories

    - name: Fail if more than one URL category is found
      fail:
        msg: "More than one URL category found in rule, unable to determine which URL category list to use: {{ url_categories }}"
      when: url_categories | length > 1

    - name: Add URL to retrieved URL category
      paloaltonetworks.panos.panos_custom_url_category:
        provider: '{{ provider }}'
        name: "{{ url_categories[0] }}"
        url_value: "{{ request_url }}"