- name: SHOW MANUALLY SPECIFIED NETWORK
  debug:
    var: staticnetwork

- name: CREATE VLAN FOR OUR NETWORK
  block:

    - name: GET THE INFOBLOX NIOS MODULE VERSION
      ansible.builtin.include_tasks: get_infoblox_version.yml

    - name: GET NEXT FREE VLAN FOR OUR NETWORK FROM VLAN POOL
      # Use next_vlan_id function when using infoblox.nios_modules >= version 1.8
      set_fact:
        next_vlan_id: "{{ lookup('infoblox.nios_modules.nios_next_vlan_id', parent=vlanrange_name, provider=nios_provider) }}"
      when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) >= 8

    - name: SET NORMALISED VLAN VARIABLE NAME
      set_fact:
        next_vlan_id: "{{ next_vlan_id[0] }}"
      when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) >= 8

    - name: CREATE NEW VLAN IN INFOBLOX
      infoblox.nios_modules.nios_vlan:
        name: "{{ bd_name }}"
        id: "{{ next_vlan_id }}"
        parent: "{{ vlanrange_name }}"
        state: present
        provider: "{{ nios_provider }}"
      when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) >= 8

    - name: CREATE NEW VLAN THROUGH INFOBLOX WAPI FOR OLDER NIOS MODULE VERSION
      # Use include with WAPI calls when using infoblox.nios_modules < version 1.8
      ansible.builtin.include_tasks: vlanview2.yml
      when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) < 8

  when: vmm_domain == "vmm_hyperv"

- name: CREATE IPV4 NETWORK WITH INFOBLOX TEMPLATE
  infoblox.nios_modules.nios_network:
    network: "{{ staticnetwork }}"
    comment: "{{ bd_name }}"
    template: "network{{ subnetmask }}{% if not dhcp %}_nodhcp{% endif %}"
    state: present
    provider: "{{ nios_provider }}"

- name: ADD VLAN TO OUR NEW NETWORK
  infoblox.nios_modules.nios_network:
    network: "{{ toolserver_networkaddr[0] }}"
    vlans:
      - name: "{{ bd_name }}"
        parent: "{{ vlanrange_name }}"
        id: "{{ next_vlan_id }}"
    members:
      - name: "infoblox.zero-days.nl"
    state: present
    provider: "{{ nios_provider }}"
  when: vmm_domain == "vmm_hyperv"

- name: SET STAT THE NETWORK ADDRESS FOR FURTHER WORKFLOW
  ansible.builtin.set_stats:
    data:
      subnet: "{{ staticnetwork }}"
      vlan: "{{ next_vlan_id }}"

#    - name: RESTART INFOBLOX DHCP SERVICE
#      nios_restartservices:
#        services:
#          - DHCP
#        restart_option: RESTART_IF_NEEDED
#        mode: GROUPED
#        provider: "{{ nios_provider }}"

- name: END PLAY - NOTHING MORE TO DO
  ansible.builtin.meta: end_play
