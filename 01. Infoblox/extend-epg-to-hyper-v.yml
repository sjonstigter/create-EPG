---
- hosts: nios
  connection: local
  name: ALLOCATE INFOBLOX VLAN

  vars:
    nios_provider:
      host: "{{ inventory_hostname }}"
      username: "{{ lookup('env', 'ANSIBLE_NET_USERNAME') }}"
      password: "{{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}"
      ssl_verify: false
    bd_name: "{{ epg_name | replace('epg_','bd_') }}"
    wapi_version: "v2.13"
    vlanrange_name: "vlan_pool"

    tenant_container:
      shg: "10.221.0.0/16"
      common: "10.229.0.0/16"
      ss_22: "10.221.0.0/16"

  tasks:
    - name: LOOKUP NETWORK FOR REQUESTED EPG
      set_fact:
        network_result: "{{ lookup('infoblox.nios_modules.nios_lookup', 'network', filter={'comment': bd_name}, return_fields=['network'], provider=nios_provider, wantlist=True) }}"

    - name: DEBUG NETWORK RESULT
      debug:
        var: network_result[0].network

    - name: CREATE VLAN FOR OUR NETWORK
      block:

        - name: GET THE INFOBLOX NIOS MODULE VERSION
          ansible.builtin.include_tasks: get_infoblox_version.yml

        - name: GET NEXT FREE VLAN FOR OUR NETWORK FROM VLAN POOL
          # Use next_vlan_id function when using infoblox.nios_modules >= version 1.8
          set_fact:
            next_vlan_id: "{{ lookup('infoblox.nios_modules.nios_next_vlan_id', parent=vlanrange_name, provider=nios_provider) }}"
          when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) >= 8

        - name: SET NORMALISED VLAN VARIABLE NAME
          set_fact:
            next_vlan_id: "{{ next_vlan_id[0] }}"
          when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) >= 8

        - name: CREATE NEW VLAN IN INFOBLOX
          infoblox.nios_modules.nios_vlan:
            name: "{{ bd_name }}"
            id: "{{ next_vlan_id }}"
            parent: "{{ vlanrange_name }}"
            state: present
            provider: "{{ nios_provider }}"
          when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) >= 8

        - name: CREATE NEW VLAN THROUGH INFOBLOX WAPI FOR OLDER NIOS MODULE VERSION
          # Use include with WAPI calls when using infoblox.nios_modules < version 1.8
          ansible.builtin.include_tasks: vlanview2.yml
          when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) < 8

        - name: STORE VLAN IN ANSIBLE STATS
          ansible.builtin.set_stats:
            data:
              vlan: "{{ next_vlan_id }}"

    - name: ADD VLAN TO THE NEW NETWORK
      block:

        - name: ADD VLAN TO OUR NEW NETWORK THROUGH ANSIBLE NIOS MODULE
          # Use buildin VLAN functions if infoblox.nios_modules is version 1.8 or newer
          infoblox.nios_modules.nios_network:
            network: "{{ network_result[0] }}"
            vlans:
              - name: "{{ bd_name }}"
                parent: "{{ vlanrange_name }}"
                id: "{{ next_vlan_id }}"
            members:
              - name: "infoblox.zero-days.nl"
            state: present
            provider: "{{ nios_provider }}"
          when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) >= 8

        - name: GET NETWORK REFERENCE
          # If infoblox.nios_modules version is < 1.8 we cannot use buildin VLAN functions and have to fallback to Infoblox WAPI
          ansible.builtin.uri:
            url: "https://{{ nios_provider.host }}/wapi/{{ wapi_version }}/network?network={{ network_result[0] }}"
            method: GET
            user: "{{ nios_provider.username }}"
            password: "{{ nios_provider.password }}"
            force_basic_auth: yes
            return_content: yes
            validate_certs: "{{ nios_provider.ssl_verify }}"
          register: network_ref_lookup
          when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) < 8

        - name: SET FACT FOR NETWORK REFERENCE
          ansible.builtin.set_fact:
            network_ref: "{{ network_ref_lookup.json[0]._ref }}"
          when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) < 8

        - name: ADD VLAN TO OUR NEW NETWORK THROUGH INFOBLOX WAPI FOR OLDER NIOS MODULE VERSION
          # If infoblox.nios_modules version is < 1.8 we cannot use buildin VLAN functions and have to fallback to Infoblox WAPI
          ansible.builtin.uri:
            url: "https://{{ nios_provider.host }}/wapi/{{ wapi_version }}/{{ network_ref }}"
            method: PUT
            user: "{{ nios_provider.username }}"
            password: "{{ nios_provider.password }}"
            status_code: 200, 201
            force_basic_auth: yes
            body_format: json
            body: |
              {
                "vlans": [
                  {
                    "vlan": "{{ vlan_full_ref }}"
                  }
                ]
              }
            return_content: yes
            validate_certs: "{{ nios_provider.ssl_verify }}"
          when: (infoblox_major_version | int) == 1 and (infoblox_minor_version | int) < 8
